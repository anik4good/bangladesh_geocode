apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\anik\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f .\docker-compose_image.yaml -o .\k3s_deploy\
    kompose.version: 1.37.0 (fb0539e64)
  labels:
    io.kompose.service: app
  name: app
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: app
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\anik\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f .\docker-compose_image.yaml -o .\k3s_deploy\
        kompose.version: 1.37.0 (fb0539e64)
      labels:
        io.kompose.service: app
    spec:

      # <-- Add initContainers here
      initContainers:
      - name: wait-for-db
        image: busybox:1.36 # A small, simple image
        # This command repeatedly tries to connect to the db service on port 3306
        # It will keep trying until it succeeds, then the init container will exit
        command: [ 'sh', '-c', 'until nc -z -v -w30 db 3306; do echo "Waiting for database connection..."; sleep 2; done;' ]
      containers:
      - env:
        - name: CONNECTION
          value: user:password@tcp(db:3306)/bangladesh_geocode?charset=utf8mb4&parseTime=True&loc=Local
        - name: SERVER_PORT
          value: "1552"
        # - name: SERVER_URL
        #   value: http://0.0.0.0:1552
        image: anik4good/bangladesh_geocode:latest
        name: app
        imagePullPolicy: Always
        ports:
        - containerPort: 1552
          protocol: TCP
        # workingDir: /app
        volumeMounts:
        - name: logs
          mountPath: /app/logs
      restartPolicy: Always
      volumes:
      - name: logs
        persistentVolumeClaim:
          claimName: logs
      imagePullSecrets:
      - name: regcred
